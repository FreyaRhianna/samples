apply plugin: 'java'
apply plugin: 'net.corda.plugins.cordapp'
apply plugin: 'net.corda.plugins.cordformation'
apply plugin: 'net.corda.plugins.quasar-utils'

cordapp {
    targetPlatformVersion corda_platform_version.toInteger()
    minimumPlatformVersion corda_platform_version.toInteger()
    workflow {
        name "WhistleBlower"
        vendor "Corda Open Source"
        licence "Apache License, Version 2.0"
        versionId 1
    }
}


sourceSets {
    main {
        resources {
            srcDir "../config/dev"
        }
    }
}

dependencies {

    testCompile "junit:junit:$junit_version"

    // Corda dependencies.
    cordaCompile "$corda_release_group:corda-core:$corda_release_version"
    cordaCompile "$corda_release_group:corda-jackson:$corda_release_version"
    cordaCompile "$corda_release_group:corda-rpc:$corda_release_version"
    cordaRuntime "$corda_release_group:corda:$corda_release_version"

    testCompile "$corda_release_group:corda-node-driver:$corda_release_version"
    cordaRuntime "org.apache.logging.log4j:log4j-slf4j-impl:$log4j_version"

    // CorDapp dependencies.
    cordapp project(":contracts-java")
    cordapp "$corda_release_group:corda-confidential-identities:$corda_release_version"
}

jar {
    // CorDapps do not configure a Node's logging.
    exclude '**/log4j2*.xml'
}
tasks.withType(JavaCompile) {
    options.compilerArgs << "-parameters" // Required for shell commands.
}


task deployNodes(type: net.corda.plugins.Cordform, dependsOn: ['jar']) {
    nodeDefaults {
        cordapp "$corda_release_group:corda-confidential-identities:$corda_release_version"
        cordapp project(":contracts-java")
    }
    node {
        name "O=Notary,L=Nakuru,C=KE"
        notary = [validating: true]
        p2pPort 10006
        rpcSettings {
            address("localhost:10007")
            adminAddress("localhost:10008")
        }
    }
    node {
        name "O=BraveEmployee,L=Nairobi,C=KE"
        p2pPort 10009
        rpcSettings {
            address("localhost:10010")
            adminAddress("localhost:10011")
        }
        rpcUsers = [[user: "user1", "password": "test", "permissions": ["ALL"]]]
    }
    node {
        name "O=TradeBody,L=Kisumu,C=KE"
        p2pPort 10013
        rpcSettings {
            address("localhost:10014")
            adminAddress("localhost:10015")
        }
        rpcUsers = [[user: "user1", "password": "test", "permissions": ["ALL"]]]
    }
    node {
        name "O=BadCompany,L=Eldoret,C=KE"
        p2pPort 10017
        rpcSettings {
            address("localhost:10018")
            adminAddress("localhost:10019")
        }
        rpcUsers = [[user: "user1", "password": "test", "permissions": ["ALL"]]]
    }
}